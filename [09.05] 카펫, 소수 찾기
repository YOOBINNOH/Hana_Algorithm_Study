# 소수 찾기

from itertools import permutations

def check(n):
    for i in range(2,n//2+1):
        if n%i == 0:
            return False
    return True

def solution(numbers):
    answer = 0
    
    numbers = list(numbers)
    k = [ ]
    
    for i in range(1,len(numbers)+1):
        k+=(list(permutations(numbers,i)))
    
    
    temp = [ ]
    
    
    
    for i in range(0,len(k)):
        n = int("".join(k[i]))
        
        
        
        if n not in temp and n>=2:
            temp.append(n)
            
            if check(n)==True:
                answer+=1
            
    
    return answer



# 카펫

def solution(brown, yellow):
    answer = []
    a=0
    a=int((brown-4)/2)
    for i in range(1, int((a+1)/2+1)):
        if i*(a-i) == yellow:
            answer.append(a-i+2)
            answer.append(i+2)
            break
    return answer
