# 05.22(월)
## 단어뒤집기 - 해결

import sys
input=sys.stdin.readline

t=int(input())
for i in range(t):
    a=list(input().split())
    res=""
    for j in range(len(a)):
        k=list(a[j])
        result=list(reversed(k))
        res+="".join(result)+" "
    print(res)
        


## 스택 - 해결

import sys
input=sys.stdin.readline

n=int(input())

stack=list()
for i in range(n):
    a=input().split()

    if a[0]=="push":
        stack.append(a[1])
    elif a[0]=="pop":
        if len(stack)==0:
            print(-1)
        else:
            print(stack.pop())
    elif a[0]=="size":
        print(len(stack))
    elif a[0]=="empty":
        if len(stack)==0:
            print(1)
        else:
            print(0)
    elif a[0]=="top":
        if len(stack)==0:
            print(-1)
        else:
            print(stack[-1])
    


# 05.23(화)
## 스택 수열 - 문제 이해X -> 참고하여 품





## 괄호 - 참고하여 품

import sys

input = sys.stdin.readline

a = int(input())
for i in range(a):
    b = input()
    s = list(b)
    sum = 0
    for i in s:
        if i == "(":
            sum += 1
        elif i == ")":
            sum -= 1
        if sum < 0:
            print("NO")
            break
    if sum > 0:
        print("NO")
    elif sum == 0:
        print("YES")





# 05.24(수)
## 큐 - 해결

import sys
input=sys.stdin.readline

n=int(input())

queue=list()

for i in range(n):
    a=input().split()

    if a[0]=="push":
        queue.append(a[1])
    elif a[0]=="pop":
        if len(queue) ==0:
            print(-1)
        else:
            print(queue[0])
            k=queue[0]
            queue.remove(k)
    elif a[0]=="size":
        print(len(queue))
    elif a[0]=="empty":
        if len(queue) ==0:
            print(1)
        else:
            print(0)
    elif a[0]=="front":
        if len(queue) ==0:
            print(-1)
        else:
            print(queue[0])
            
    elif a[0]=="back":
        if len(queue) ==0:
            print(-1)
        else:
            print(queue[-1])





## 에디터 - 힌트만 보고 직접 해결
import sys

input = sys.stdin.readline

l_stack = list(input().strip())

r_stack = list()
k = int(input())

for i in range(k):
    a = input()
    if a[0] == "P":
        l_stack.append(a[2])
        # cursor += 1
    elif a[0] == "L":
        if len(l_stack)==0:
            continue
        else:
            r_stack.append(l_stack.pop(-1))
    elif a[0] == "D":
        if len(r_stack)==0:
            continue
        else:
            l_stack.append(r_stack.pop(-1))
    elif a[0] == "B":   
        if len(l_stack)==0:
            continue
        else:
            l_stack.pop(-1)

for i in reversed(range(len(r_stack))):
    l_stack.append(r_stack[i])

print("".join(l_stack))





# 05.25(목)
## 덱 - 해결

import sys

input = sys.stdin.readline

n = int(input())

deque = list()
for i in range(n):
    a = input().split()

    if a[0] == "push_front":
        deque.insert(0, a[1])
    elif a[0] == "push_back":
        deque.append(a[1])
    elif a[0] == "pop_front":
        if len(deque) == 0:
            print(-1)
        else:
            print(deque.pop(0))
    elif a[0] == "pop_back":
        if len(deque) == 0:
            print(-1)
        else:
            print(deque.pop(-1))
    elif a[0] == "size":
        print(len(deque))
    elif a[0] == "empty":
        if len(deque) == 0:
            print(1)
        else:
            print(0)
    elif a[0] == "front":
        if len(deque) == 0:
            print(-1)
        else:
            print(deque[0])
    elif a[0] == "back":
        if len(deque) == 0:
            print(-1)
        else:
            print(deque[-1])





## 요세푸스 문제




# 05.26(금)
## 쇠막대기- 테스트케이스2 통과 X -> 참고하여 해결
a = list(input())

s = list()
res = 0
for i in range(len(a)):
    if a[i] == "(":
        s.append(a[i])
    else:
        if a[i - 1] == "(":
            s.pop()
            res += len(s)
        else:
            s.pop()
            res += 1
print(res)





## 단어 뒤집기2 - 태그 부분의 공백 처리가 안되어 참고하여 품

import sys
word = list(sys.stdin.readline().rstrip())

i = 0
start = 0

while i < len(word):
    if word[i] == "<":       # 열린 괄호를 만나면
        i += 1 
        while word[i] != ">":      # 닫힌 괄호를 만날 때 까지
            i += 1 
        i += 1               # 닫힌 괄호를 만난 후 인덱스를 하나 증가시킨다
    elif word[i].isalnum(): # 숫자나 알파벳을 만나면
        start = i
        while i < len(word) and word[i].isalnum():
            i+=1
        tmp = word[start:i] # 숫자,알파벳 범위에 있는 것들을
        tmp.reverse()       # 뒤집는다
        word[start:i] = tmp
    else:                   # 괄호도 아니고 알파,숫자도 아닌것 = 공백
        i+=1                # 그냥 증가시킨다

print("".join(word))









