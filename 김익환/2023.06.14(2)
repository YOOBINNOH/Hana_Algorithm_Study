// 백준_실버3_15656번_N과M(7)

/*
풀이>
입력받은 원소값들을 sort()함수를 이용해 오름차순 처리를 해주었다.
재귀함수로 완전탐색을 구현했고 dfs()함수 내에 중복해서 원소를 선택 가능하도록 처리하여 
중복 가능한 모든 수열을 출력할 수 있도록 만들었다.

*/

#include<iostream>
#include<algorithm>

using namespace std;

int N, M;
int arr[7] = { 0, };
int sol[7] = { 0, };

void dfs(int count) {

	if (count == M) {
		for (int i = 0; i < M; i++) {
			cout << sol[i] << " ";
		}
		cout << '\n';
		return;
	}

	for (int i = 0; i < N; i++) {
		sol[count] = arr[i];
		dfs(count + 1);
	}
}

int main() {

	cin >> N >> M;

	for (int i = 0; i < N; i++) {
		cin >> arr[i];
	}

	sort(arr, arr + N);
	dfs(0);

	return 0;
}
