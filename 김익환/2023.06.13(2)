// 백준_실버3_15654번_N과M(5)

/*

풀이>

재귀를 사용한 깊이탐색으로 답을 찾았고
algorithm 라이브러리의 sort 정렬함수를 사용해 배열의 값을 오름차순으로 정렬해주어
깊이탐색을 하면서 출력을 할 때 순차적으로 출력되도록 하였다.


*/

#include<iostream>
#include<algorithm>

using namespace std;

int arr[9] = { 0, };
int visit[9] = { 0, };
int sol[9] = { 0, };


void dfs(int n, int m, int count) {
	if (count == m) {
		for (int i = 1; i <= m; i++) {
			cout << sol[i] << " ";
		}
		cout << '\n';
	}

	for (int i = 1; i <= n; i++) {
		if (visit[i] != 1) {
			visit[i] = 1;
			sol[count + 1] = arr[i];
			dfs(n, m, count + 1);
			visit[i] = 0;
		}
	}
}

int main() {

	int N, M;

	cin >> N >> M;

	for (int i = 1; i <= N; i++) {
		cin >> arr[i];
	}

	sort(arr+1, arr + N+1);

	dfs(N, M, 0);

	return 0;
}
