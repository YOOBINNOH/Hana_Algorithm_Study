// 백준_실버3_1463번_DP_1로만들기

/*
풀이>
직관적으로 알 수 있는 1~3까지의 최소 횟수를 지정한 후
4~N번째까지는 3을 곱하기전, 2를 곱하기전, 1을 더하기전의 최소횟수+1 값들을 비교하여 가장 작은 값을 찾아내었다.


*/

#include<iostream>


using namespace std;

int arr[1000001] = { 0, };

int main() {

	int N;

	cin >> N;

	// 점화식을 위한 기본 값 설정
	arr[1] = 0;
	arr[2] = 1;
	arr[3] = 1;

	//3을 곱하기전, 2를 곱하기전, 1을 더하기전의 최소횟수+1 값들을 비교하여 가장 작은 값을 뽑아냄
	for (int i = 4; i <= N; i++) {
		int tmp = 100000000;
		if (i % 3 == 0 && tmp > arr[i / 3] + 1) {
			tmp = arr[i / 3] + 1;
		}
		if (i % 2 == 0 && tmp > arr[i/2]+1) {
			tmp = arr[i / 2] + 1;
		}
		if (tmp > arr[i - 1] + 1) {
			tmp = arr[i - 1] + 1;
		}

		arr[i] = tmp;
	}

	cout << arr[N];




	return 0;
}
